\cancel mode verify	! ... now overlaying coastal outline ...
! 1/23 ACM     Allow for (r,g,b) syntax for line-color specifications
!              (Not in the official PyFerret release as of 3/1/2023)
!
! Description: Plot outlines of continents, countries, and/or states
! 
!		        arg 1	      arg 2	   arg 3        arg 4
! usage:   GO land [continent_color] ["basemap"] [country_color] [state_color]
! 
! colors	may be "0"(background), "1"(foreground), "thick"(same as # 7),
!		"black", "red", "green", "blue", "lightblue", "purple" or 2-18.
!		Additionally may be a color (r,g,b) or (r,g,b,a) in parentheses
!
! arg 2 may be "basemap", "overlay", "fast" (fast, 20e:20e overlay) or omitted
!
!  1) A pen color of "black" will actually pen number 1
!       -- normally white if the window background is black
!  2) An "N" for the continent pen means no continents
!       -- use this for the special case of geo-political
!       overlay without continents.
!  3) If a value is given for the country_pen or state_pen then the
!	corresponding geopolitical boundaries will be drawn - else
!	they will be omitted
!  4) use  GO line_samples to view the first 6 pen numbers
!       Higher pen numbers cycle with thicker lines (max 18)
!       See also the documentation for the PLOT command for the use of
!	(r,g,b) color specifications in PyFerret.
!  5) For arguments 1, 3, and 4, other line-style qualifiers such as /THICK may 
!       be added after the pen number, color name, or (r,g,b) color 
!       specifier. This capability is available only in PyFerret
!  6) The option "fast" for argument 2 is obsolete and has no effect but is 
!       included for backwards compatibility
!	

! examples:
!   GO land red        	  - overlay continents using red pen 
!   GO land 10            - overlay continents using pen number 10
!   GO land 1 basemap     - basemap of continents outline in foreground color
!   GO land 1 " " red     - overlay continents with countries in red
!   GO land thick basemap black black - continents, countries, and states
!   GO land N " " 1 1     - overlay: no continents; yes political boundaries
!
!   GO land (0,55,55)/thick=2 " " (40,20,65)	     ! (r,g,b) for arguments 1 and 3
!   GO land (0,30,0) basemap (100,20,0) (100,75,0)  ! (r,g,b) for arguments 1, 3, 4
!
!  4) 10/12/2004 ACM
! This script has additions similar to commands in land_detail
! to draw replications  +/-360 degrees longitude beyond the data
! in geo_borders. This gives us -540 to 1100 degrees.

! test argument before performing any actions

query/ignore $2%default|basemap|overlay|fast|<argument 2 can be "basemap", "overlay", or "fast"%


let landi_basemap = $2"0|basemap>1|*>0"

IF `landi_basemap EQ 1` THEN GO basemap x=0:360 y=-90:90 60 white

define region/default save
cancel region

! introduce the outline data set
set data/save
use geo_borders

! always do the continents

define symbol land_setting = $1"1|black>1|red>2|green>3|blue>4|lightblue>5|purple>6|thick>7|\
0>0|1>1|2>2|3>3|4>4|5>5|6>6|7>7|8>8|9>9|10>10|11>11|12>12|13>13|14>14|15>15|16>16|17>17|18>18|N>-1|*>-2"

if `($land_setting) ge 0` then

   define symbol land_colorqual=/color=($land_setting)/line

elif `($land_setting) eq -2` then

   define symbol land_arg = ($1)
   go land_arg_check

endif

if `($land_setting) ne -1` then 

   define symbol land_colorqual = ($land_colorqual)
   plot($land_colorqual)/vs/overlay/nolab continent_lon, continent_lat

endif


! **** now the optional country borders

define symbol land_setting = $3"-1|black>1|red>2|green>3|blue>4|lightblue>5|purple>6|thick>7|\
0>0|1>1|2>2|3>3|4>4|5>5|6>6|7>7|8>8|9>9|10>10|11>11|12>12|13>13|14>14|15>15|16>16|17>17|18>18|N>-1|*>-2"

if `($land_setting) ge 0` then

   define symbol land_colorqual=/color=($land_setting)/line

elif `($land_setting) eq -2` then

   define symbol land_arg = ($3)
   go land_arg_check

endif

if `($land_setting) ne -1` then 

   define symbol land_colorqual = ($land_colorqual)
   plot($land_colorqual)/vs/overlay/nolab country_lon, country_lat

endif


! **** now the optional state borders

define symbol land_setting = $4"-1|black>1|red>2|green>3|blue>4|lightblue>5|purple>6|thick>7|\
0>0|1>1|2>2|3>3|4>4|5>5|6>6|7>7|8>8|9>9|10>10|11>11|12>12|13>13|14>14|15>15|16>16|17>17|18>18|N>-1|*>-2"

if `($land_setting) ge 0` then

   define symbol land_colorqual=/color=($land_setting)/line

elif `($land_setting) eq -2` then

   define symbol land_arg = ($4)
   go land_arg_check

endif

if `($land_setting) ne -1` then 

   define symbol land_colorqual = ($land_colorqual)
   plot($land_colorqual)/vs/overlay/nolab state_lon, state_lat

endif

cancel data geo_borders
cancel var landi_*
cancel symbol land_setting, land_arg

set region save
set data/restore
set mode/last verify
