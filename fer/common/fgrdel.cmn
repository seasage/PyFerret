*
* COMMON BLOCK for graphics delegate objects
*

* Maximums as parameters.  Note that the maximum number
* of color, brush, font, pen and symbol objects is per
* window object.  These objects from one window cannot
* be shared with another window.
*
* 4/22 *acm*  PyFerret issue #51: add extrapen, for keeping track of 
*             pens defined for pyferret-style custom graticule lines

        INTEGER maxwindowobjs,
     .          maxcolorobjs,
     .          maxbrushobjs,
     .          maxfontobjs,
     .          maxpenobjs,
     .          maxsymbolobjs,
     .          maxtransforms

* maxwindowobjs should match (or exceed)
* max_windows in xplot_state.cmn

        PARAMETER(maxwindowobjs = 9,
     .            maxcolorobjs = 320,
     .            maxbrushobjs = 320,
     .            maxfontobjs = 60,
     .            maxpenobjs = 320,
     .            maxsymbolobjs = 320,
     .            maxtransforms = 60)

* A NULL object (zero) as a parameter.
* Undefined objects are set to nullobj

        REAL*8 nullobj
        PARAMETER(nullobj = 0.0)

* The following are actually pointers to objects

        REAL*8 windowobjs(maxwindowobjs),
     .         colorobjs(maxcolorobjs, maxwindowobjs),
     .         brushobjs(maxbrushobjs, maxwindowobjs),
     .         fontobjs(maxfontobjs, maxwindowobjs),
     .         penobjs(maxpenobjs, maxwindowobjs),
     .         symbolobjs(maxsymbolobjs, maxwindowobjs)

* Factor for normalized device coordinates.
* Set by GSWKWN defining the NDC limits of the full window.
        REAL*4 ndcxmax(maxwindowobjs),
     .         ndcymax(maxwindowobjs)

* Number of dots (pixels) per inch.  Assigned when creating the window.
        REAL*4 windowdpix(maxwindowobjs),
     .         windowdpiy(maxwindowobjs)

* Scaling factor for line widths and marker sizes
        REAL*4 thickfactor(maxwindowobjs)

* Width of outlines for rectangles and other polygons
        REAL*4 outlinewidth(maxwindowobjs)

* Coordinate transformation information (independent of window)
* View limits defined in [0,1] normalized device coordinates
        REAL*4 viewleftfrac(maxtransforms),
     .         viewbottomfrac(maxtransforms),
     .         viewrightfrac(maxtransforms),
     .         viewtopfrac(maxtransforms)

* Coordinate transformation information (independent of window)
* View limits defined in user (world) coordinates
        REAL*4 viewleftcoord(maxtransforms),
     .         viewbottomcoord(maxtransforms),
     .         viewrightcoord(maxtransforms),
     .         viewtopcoord(maxtransforms)

* Size of the full window in inches(?).  Used when creating
* the window and updated when the window is resized.
        REAL*4 windowwidth(maxwindowobjs),
     .         windowheight(maxwindowobjs)

* The ID number of the "active" window.  Zero means none are active.
        INTEGER activewindow

* The ID number of the "active" transformation.  Zero means the
* implicit identity transformation is active.
        INTEGER activetransform

* The number of the "active" brush of the activewindowid window
* used for filling areas.
* Zero means no brush is active and if a brush is needed, create
* a temporary brush from lastbrushcolor and lastbrushstyle.
        INTEGER activebrush

* The brush color number and style to use when creating a temporary
* brush (activebrush not specified) when filling areas.
        INTEGER lastbrushcolor
        CHARACTER*64 lastbrushstyle
        INTEGER lastbstylen

* The ID number of the "active" pen of the activewindow window
* used for drawing lines.
        INTEGER activepen

* The number of additional custom pens defined beyond the default one,
* currently used only for drawing graticule lines.
        INTEGER extrapen

* The ID number of the "active" symbol as well as the size to draw
* that symbol used for drawing markers for the active window.  The
* color used is that of the "active" pen.
        INTEGER activesymbol
        REAL*4  activesymsiz
        INTEGER activesymhighlight

* Whether something has been drawn in the current view of the
* active window.  Reset to .FALSE. when the view changes.
        LOGICAL somethingdrawn

* Whether clip the drawing to the current view
        LOGICAL cliptoview(maxwindowobjs)

* Simplest approach for retrieving color RGBA values was
* just to store them in the common block when they are set
        REAL*4 colorrgba(4, maxcolorobjs, maxwindowobjs)

* Color ID number used in brushes (for color updates)
        INTEGER brushcolor(maxbrushobjs, maxwindowobjs)

* Color ID number and width used in pens (for inquiries and updates)
        INTEGER pencolor(maxpenobjs, maxwindowobjs)
        REAL*4 penwidth(maxpenobjs, maxwindowobjs)

* Default engine for a new window.
* Should not change after start-up.
* Only reset by command-line options.
        CHARACTER*64 defaultenginename

* Raster-only option - primarily for Cairo default engine
* Only reset by command-line options.
        LOGICAL rasteronly

* Transparent background for save-on-exit (-batch)?
* Should not change after start-up.
* Only reset by the "-transparent" command-line option.
* Has nothing to do with "frame /transparent".
        LOGICAL savetransparent

* Name of the graphics engine used for each window.
        CHARACTER*64 enginename(maxwindowobjs)

* Antialiasing state for each window
        LOGICAL antialias(maxwindowobjs)

* Title for the window to be created.  The program flow
* sets this in a separate call just before creating a window.
        CHARACTER*128 windowtitle

* And finally the common block containing all these variables
        COMMON /FGRDEL/ 
     .         windowobjs, colorobjs, brushobjs, fontobjs, 
     .         penobjs, symbolobjs, 
     .
     .         colorrgba, penwidth, windowdpix, windowdpiy, 
     .         thickfactor, outlinewidth, windowwidth, windowheight, 
     .         ndcxmax, ndcymax, viewleftfrac, viewbottomfrac, 
     .         viewrightfrac, viewtopfrac, viewleftcoord, 
     .         viewbottomcoord, viewrightcoord, viewtopcoord, 
     .         activesymsiz, 
     .
     .         activewindow, activetransform, activebrush, 
     .         activepen, extrapen, activesymbol, lastbrushcolor,
     .         lastbstylen, brushcolor, pencolor, 
     .         activesymhighlight,
     .
     .         cliptoview, somethingdrawn, savetransparent, 
     .         antialias, rasteronly, 
     .
     .         lastbrushstyle, defaultenginename, enginename, 
     .         windowtitle

